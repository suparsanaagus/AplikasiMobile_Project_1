define(['dart_sdk', 'packages/sqflite_common/src/exception.dart'], (function load__packages__sqflite_common__src__collection_utils_dart(dart_sdk, packages__sqflite_common__src__exception$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const collection = dart_sdk.collection;
  const _js_helper = dart_sdk._js_helper;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const exception = packages__sqflite_common__src__exception$46dart.src__exception;
  var collection_utils = Object.create(dart.library);
  var $_get = dartx._get;
  var $cast = dartx.cast;
  var $length = dartx.length;
  var $_set = dartx._set;
  var $toSet = dartx.toSet;
  var $toList = dartx.toList;
  var $clear = dartx.clear;
  var $keys = dartx.keys;
  var $remove = dartx.remove;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    IdentityMapOfString$int: () => (T.IdentityMapOfString$int = dart.constFn(_js_helper.IdentityMap$(core.String, core.int)))(),
    MapOfString$ObjectN: () => (T.MapOfString$ObjectN = dart.constFn(core.Map$(core.String, T.ObjectN())))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    ListN: () => (T.ListN = dart.constFn(dart.nullable(core.List)))(),
    intN: () => (T.intN = dart.constFn(dart.nullable(core.int)))(),
    MapN: () => (T.MapN = dart.constFn(dart.nullable(core.Map)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var C = [];
  var I = [
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/sqflite_common-2.0.0+2/lib/src/collection_utils.dart",
    "package:sqflite_common/src/collection_utils.dart"
  ];
  var _list = dart.privateName(collection_utils, "_list");
  const _is_PluginList_default = Symbol('_is_PluginList_default');
  collection_utils.PluginList$ = dart.generic(T => {
    class PluginList extends collection.ListBase$(T) {
      get rawList() {
        return this[_list];
      }
      rawElementAt(index) {
        if (index == null) dart.nullFailed(I[0], 195, 28, "index");
        return this[_list][$_get](index);
      }
      get length() {
        return this[_list][$length];
      }
      set length(newLength) {
        if (newLength == null) dart.nullFailed(I[0], 201, 18, "newLength");
        dart.throw(new core.UnsupportedError.new("read-only"));
      }
      _set(index, value$) {
        let value = value$;
        if (index == null) dart.nullFailed(I[0], 206, 25, "index");
        T.as(value);
        dart.throw(new core.UnsupportedError.new("read-only"));
        return value$;
      }
    }
    (PluginList.from = function(list) {
      if (list == null) dart.nullFailed(I[0], 187, 33, "list");
      this[_list] = list;
      ;
    }).prototype = PluginList.prototype;
    dart.addTypeTests(PluginList);
    PluginList.prototype[_is_PluginList_default] = true;
    dart.addTypeCaches(PluginList);
    dart.setMethodSignature(PluginList, () => ({
      __proto__: dart.getMethods(PluginList.__proto__),
      rawElementAt: dart.fnType(dart.dynamic, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(PluginList, () => ({
      __proto__: dart.getGetters(PluginList.__proto__),
      rawList: core.List,
      length: core.int,
      [$length]: core.int
    }));
    dart.setSetterSignature(PluginList, () => ({
      __proto__: dart.getSetters(PluginList.__proto__),
      length: core.int,
      [$length]: core.int
    }));
    dart.setLibraryUri(PluginList, I[1]);
    dart.setFieldSignature(PluginList, () => ({
      __proto__: dart.getFields(PluginList.__proto__),
      [_list]: dart.finalFieldType(core.List)
    }));
    dart.defineExtensionMethods(PluginList, ['_set']);
    dart.defineExtensionAccessors(PluginList, ['length']);
    return PluginList;
  });
  collection_utils.PluginList = collection_utils.PluginList$();
  dart.addTypeTests(collection_utils.PluginList, _is_PluginList_default);
  collection_utils.Rows = class Rows extends collection_utils.PluginList$(core.Map$(core.String, dart.nullable(core.Object))) {
    _get(index) {
      if (index == null) dart.nullFailed(I[0], 15, 40, "index");
      let item = core.Map.as(this.rawList[$_get](index));
      return item[$cast](core.String, T.ObjectN());
    }
  };
  (collection_utils.Rows.from = function(list) {
    if (list == null) dart.nullFailed(I[0], 12, 27, "list");
    collection_utils.Rows.__proto__.from.call(this, list);
    ;
  }).prototype = collection_utils.Rows.prototype;
  dart.addTypeTests(collection_utils.Rows);
  dart.addTypeCaches(collection_utils.Rows);
  dart.setMethodSignature(collection_utils.Rows, () => ({
    __proto__: dart.getMethods(collection_utils.Rows.__proto__),
    _get: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [core.int]),
    [$_get]: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [core.int])
  }));
  dart.setLibraryUri(collection_utils.Rows, I[1]);
  dart.defineExtensionMethods(collection_utils.Rows, ['_get']);
  var _rows = dart.privateName(collection_utils, "_rows");
  var _columns = dart.privateName(collection_utils, "_columns");
  var _keys = dart.privateName(collection_utils, "_keys");
  var __QueryResultSet__columnIndexMap = dart.privateName(collection_utils, "_#QueryResultSet#_columnIndexMap");
  var __QueryResultSet__columnIndexMap_isSet = dart.privateName(collection_utils, "_#QueryResultSet#_columnIndexMap#isSet");
  var _columnIndexMap = dart.privateName(collection_utils, "_columnIndexMap");
  collection_utils.QueryResultSet = class QueryResultSet extends collection.ListBase$(core.Map$(core.String, dart.nullable(core.Object))) {
    get [_columnIndexMap]() {
      let t0;
      return dart.test(this[__QueryResultSet__columnIndexMap_isSet]) ? (t0 = this[__QueryResultSet__columnIndexMap], t0) : dart.throw(new _internal.LateError.fieldNI("_columnIndexMap"));
    }
    set [_columnIndexMap](t0) {
      if (t0 == null) dart.nullFailed(I[0], 92, 25, "null");
      this[__QueryResultSet__columnIndexMap_isSet] = true;
      this[__QueryResultSet__columnIndexMap] = t0;
    }
    get length() {
      let t1, t1$;
      t1$ = (t1 = this[_rows], t1 == null ? null : t1[$length]);
      return t1$ == null ? 0 : t1$;
    }
    _get(index) {
      if (index == null) dart.nullFailed(I[0], 98, 40, "index");
      return new collection_utils.QueryRow.new(this, dart.nullCheck(this[_rows])[$_get](index));
    }
    _set(index, value$) {
      let value = value$;
      if (index == null) dart.nullFailed(I[0], 103, 25, "index");
      T.MapOfString$ObjectN().as(value);
      if (value == null) dart.nullFailed(I[0], 103, 53, "value");
      dart.throw(new core.UnsupportedError.new("read-only"));
      return value$;
    }
    set length(newLength) {
      if (newLength == null) dart.nullFailed(I[0], 108, 18, "newLength");
      dart.throw(new core.UnsupportedError.new("read-only"));
    }
    columnIndex(name) {
      return this[_columnIndexMap][$_get](dart.nullCheck(name));
    }
    get keys() {
      let t1;
      t1 = this[_keys];
      return t1 == null ? this[_keys] = dart.nullCheck(this[_columns])[$toSet]()[$toList]({growable: false}) : t1;
    }
  };
  (collection_utils.QueryResultSet.new = function(rawColumns, rawRows) {
    let t0, t0$;
    this[_rows] = null;
    this[_columns] = null;
    this[_keys] = null;
    this[__QueryResultSet__columnIndexMap] = null;
    this[__QueryResultSet__columnIndexMap_isSet] = false;
    this[_columns] = (t0 = rawColumns, t0 == null ? null : t0[$cast](core.String));
    this[_rows] = (t0$ = rawRows, t0$ == null ? null : t0$[$cast](core.List));
    if (this[_columns] != null) {
      this[_columnIndexMap] = new (T.IdentityMapOfString$int()).new();
      for (let i = 0; i < dart.notNull(dart.nullCheck(this[_columns])[$length]); i = i + 1) {
        this[_columnIndexMap][$_set](dart.nullCheck(this[_columns])[$_get](i), i);
      }
    }
  }).prototype = collection_utils.QueryResultSet.prototype;
  dart.addTypeTests(collection_utils.QueryResultSet);
  dart.addTypeCaches(collection_utils.QueryResultSet);
  dart.setMethodSignature(collection_utils.QueryResultSet, () => ({
    __proto__: dart.getMethods(collection_utils.QueryResultSet.__proto__),
    _get: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [core.int]),
    [$_get]: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [core.int]),
    _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
    [$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
    columnIndex: dart.fnType(dart.nullable(core.int), [dart.nullable(core.String)])
  }));
  dart.setGetterSignature(collection_utils.QueryResultSet, () => ({
    __proto__: dart.getGetters(collection_utils.QueryResultSet.__proto__),
    [_columnIndexMap]: core.Map$(core.String, core.int),
    length: core.int,
    [$length]: core.int,
    keys: core.List$(core.String)
  }));
  dart.setSetterSignature(collection_utils.QueryResultSet, () => ({
    __proto__: dart.getSetters(collection_utils.QueryResultSet.__proto__),
    [_columnIndexMap]: core.Map$(core.String, core.int),
    length: core.int,
    [$length]: core.int
  }));
  dart.setLibraryUri(collection_utils.QueryResultSet, I[1]);
  dart.setFieldSignature(collection_utils.QueryResultSet, () => ({
    __proto__: dart.getFields(collection_utils.QueryResultSet.__proto__),
    [_rows]: dart.fieldType(dart.nullable(core.List$(core.List))),
    [_columns]: dart.fieldType(dart.nullable(core.List$(core.String))),
    [_keys]: dart.fieldType(dart.nullable(core.List$(core.String))),
    [__QueryResultSet__columnIndexMap]: dart.fieldType(dart.nullable(core.Map$(core.String, core.int))),
    [__QueryResultSet__columnIndexMap_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(collection_utils.QueryResultSet, ['_get', '_set']);
  dart.defineExtensionAccessors(collection_utils.QueryResultSet, ['length']);
  var queryResultSet$ = dart.privateName(collection_utils, "QueryRow.queryResultSet");
  var row$ = dart.privateName(collection_utils, "QueryRow.row");
  collection_utils.QueryRow = class QueryRow extends collection.MapBase$(core.String, dart.dynamic) {
    get queryResultSet() {
      return this[queryResultSet$];
    }
    set queryResultSet(value) {
      super.queryResultSet = value;
    }
    get row() {
      return this[row$];
    }
    set row(value) {
      super.row = value;
    }
    _get(key) {
      let stringKey = T.StringN().as(key);
      let columnIndex = this.queryResultSet.columnIndex(stringKey);
      if (columnIndex != null) {
        return this.row[$_get](columnIndex);
      }
      return null;
    }
    _set(key, value$) {
      let value = value$;
      core.String.as(key);
      if (key == null) dart.nullFailed(I[0], 143, 28, "key");
      dart.throw(new core.UnsupportedError.new("read-only"));
      return value$;
    }
    clear() {
      dart.throw(new core.UnsupportedError.new("read-only"));
    }
    get keys() {
      return this.queryResultSet.keys;
    }
    remove(key) {
      dart.throw(new core.UnsupportedError.new("read-only"));
    }
  };
  (collection_utils.QueryRow.new = function(queryResultSet, row) {
    if (queryResultSet == null) dart.nullFailed(I[0], 124, 17, "queryResultSet");
    if (row == null) dart.nullFailed(I[0], 124, 38, "row");
    this[queryResultSet$] = queryResultSet;
    this[row$] = row;
    ;
  }).prototype = collection_utils.QueryRow.prototype;
  dart.addTypeTests(collection_utils.QueryRow);
  dart.addTypeCaches(collection_utils.QueryRow);
  dart.setMethodSignature(collection_utils.QueryRow, () => ({
    __proto__: dart.getMethods(collection_utils.QueryRow.__proto__),
    _get: dart.fnType(dart.dynamic, [dart.nullable(core.Object)]),
    [$_get]: dart.fnType(dart.dynamic, [dart.nullable(core.Object)]),
    _set: dart.fnType(dart.void, [dart.nullable(core.Object), dart.nullable(core.Object)]),
    [$_set]: dart.fnType(dart.void, [dart.nullable(core.Object), dart.nullable(core.Object)]),
    clear: dart.fnType(dart.void, []),
    [$clear]: dart.fnType(dart.void, []),
    remove: dart.fnType(dart.dynamic, [dart.nullable(core.Object)]),
    [$remove]: dart.fnType(dart.dynamic, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(collection_utils.QueryRow, () => ({
    __proto__: dart.getGetters(collection_utils.QueryRow.__proto__),
    keys: core.Iterable$(core.String),
    [$keys]: core.Iterable$(core.String)
  }));
  dart.setLibraryUri(collection_utils.QueryRow, I[1]);
  dart.setFieldSignature(collection_utils.QueryRow, () => ({
    __proto__: dart.getFields(collection_utils.QueryRow.__proto__),
    queryResultSet: dart.finalFieldType(collection_utils.QueryResultSet),
    row: dart.finalFieldType(core.List)
  }));
  dart.defineExtensionMethods(collection_utils.QueryRow, ['_get', '_set', 'clear', 'remove']);
  dart.defineExtensionAccessors(collection_utils.QueryRow, ['keys']);
  var result$ = dart.privateName(collection_utils, "BatchResult.result");
  collection_utils.BatchResult = class BatchResult extends core.Object {
    get result() {
      return this[result$];
    }
    set result(value) {
      super.result = value;
    }
  };
  (collection_utils.BatchResult.new = function(result) {
    this[result$] = result;
    ;
  }).prototype = collection_utils.BatchResult.prototype;
  dart.addTypeTests(collection_utils.BatchResult);
  dart.addTypeCaches(collection_utils.BatchResult);
  dart.setLibraryUri(collection_utils.BatchResult, I[1]);
  dart.setFieldSignature(collection_utils.BatchResult, () => ({
    __proto__: dart.getFields(collection_utils.BatchResult.__proto__),
    result: dart.finalFieldType(dart.dynamic)
  }));
  collection_utils.BatchResults = class BatchResults extends collection_utils.PluginList {
    _get(index) {
      if (index == null) dart.nullFailed(I[0], 176, 27, "index");
      let rawMap = core.Map.as(this[_list][$_get](index));
      return collection_utils.fromRawOperationResult(rawMap);
    }
  };
  (collection_utils.BatchResults.from = function(list) {
    if (list == null) dart.nullFailed(I[0], 173, 35, "list");
    collection_utils.BatchResults.__proto__.from.call(this, list);
    ;
  }).prototype = collection_utils.BatchResults.prototype;
  dart.addTypeTests(collection_utils.BatchResults);
  dart.addTypeCaches(collection_utils.BatchResults);
  dart.setMethodSignature(collection_utils.BatchResults, () => ({
    __proto__: dart.getMethods(collection_utils.BatchResults.__proto__),
    _get: dart.fnType(dart.dynamic, [core.int]),
    [$_get]: dart.fnType(dart.dynamic, [core.int])
  }));
  dart.setLibraryUri(collection_utils.BatchResults, I[1]);
  dart.defineExtensionMethods(collection_utils.BatchResults, ['_get']);
  collection_utils.queryResultSetFromMap = function queryResultSetFromMap(queryResultSetMap) {
    if (queryResultSetMap == null) dart.nullFailed(I[0], 22, 60, "queryResultSetMap");
    let columns = T.ListN().as(queryResultSetMap[$_get]("columns"));
    let rows = T.ListN().as(queryResultSetMap[$_get]("rows"));
    return new collection_utils.QueryResultSet.new(columns, rows);
  };
  collection_utils.databaseExceptionFromOperationError = function databaseExceptionFromOperationError(errorMap) {
    if (errorMap == null) dart.nullFailed(I[0], 30, 27, "errorMap");
    let message = T.StringN().as(errorMap[$_get]("message"));
    return new exception.SqfliteDatabaseException.new(message, errorMap[$_get]("data"), {resultCode: T.intN().as(errorMap[$_get]("resultCode"))});
  };
  collection_utils.fromRawOperationResult = function fromRawOperationResult(rawOperationResultMap) {
    if (rawOperationResultMap == null) dart.nullFailed(I[0], 40, 54, "rawOperationResultMap");
    let errorMap = T.MapN().as(rawOperationResultMap[$_get]("error"));
    if (errorMap != null) {
      return collection_utils.databaseExceptionFromOperationError(errorMap);
    }
    let successResult = rawOperationResultMap[$_get]("result");
    if (core.Map.is(successResult)) {
      return collection_utils.queryResultToList(successResult);
    } else if (core.List.is(successResult)) {
      return collection_utils.queryResultToList(successResult);
    }
    return successResult;
  };
  collection_utils.queryResultToList = function queryResultToList(queryResult) {
    if (core.Map.is(queryResult)) {
      return collection_utils.queryResultSetFromMap(queryResult);
    }
    if (core.List.is(queryResult)) {
      let rows = new collection_utils.Rows.from(queryResult);
      return rows;
    }
    dart.throw("Unsupported queryResult type " + dart.str(queryResult));
  };
  dart.trackLibraries("packages/sqflite_common/src/collection_utils.dart", {
    "package:sqflite_common/src/collection_utils.dart": collection_utils
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["collection_utils.dart"],"names":[],"mappings":"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","file":"../../../../../../../../D:/packages/sqflite_common/src/collection_utils.dart.lib.js"}');
  // Exports:
  return {
    src__collection_utils: collection_utils
  };
}));

//# sourceMappingURL=collection_utils.dart.lib.js.map
